"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[61770],{35318:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(27378);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(n),d=a,k=m["".concat(s,".").concat(d)]||m[d]||u[d]||o;return n?r.createElement(k,i(i({ref:t},p),{},{components:n})):r.createElement(k,i({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},41206:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=n(25773),a=(n(27378),n(35318));const o={sidebar_position:2,title:"Docker"},i="Docker",l={unversionedId:"general/Integrations/containers",id:"version-0.13.1/general/Integrations/containers",title:"Docker",description:"AskUI UI Controller Docker Images",source:"@site/versioned_docs/version-0.13.1/general/05-Integrations/containers.md",sourceDirName:"general/05-Integrations",slug:"/general/Integrations/containers",permalink:"/docs/general/Integrations/containers",draft:!1,editUrl:"https://github.com/askui/askui/tree/main/docs/versioned_docs/version-0.13.1/general/05-Integrations/containers.md",tags:[],version:"0.13.1",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Docker"},sidebar:"docsSidebar",previous:{title:"Continuous Integration",permalink:"/docs/general/Integrations/continuous-integration copy"},next:{title:"Reporting",permalink:"/docs/general/Integrations/reporting"}},s={},c=[{value:"AskUI UI Controller Docker Images",id:"askui-ui-controller-docker-images",level:2},{value:"Configuration",id:"configuration",level:3},{value:"Usage",id:"usage",level:3},{value:"Starting Container <em>Manually</em>",id:"starting-container-manually",level:3},{value:"Starting Container from Within <code>beforeAll()</code> Using Testcontainers",id:"starting-container-from-within-beforeall-using-testcontainers",level:3},{value:"Tag Naming Schema",id:"tag-naming-schema",level:2},{value:"Connect via VNC",id:"connect-via-vnc",level:2}],p={toc:c};function u(e){let{components:t,...o}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"docker"},"Docker"),(0,a.kt)("h2",{id:"askui-ui-controller-docker-images"},"AskUI UI Controller Docker Images"),(0,a.kt)("p",null,"We maintain Docker images for running instructions with AskUI inside a Docker Container, e.g., locally or in a CI/CD pipeline. The images are based on Ubuntu (amd64) images and contain the askui UI Controller (also known as the ",(0,a.kt)("em",{parentName:"p"},"UiController"),") and a browser. The AskUI SDK connects to the UI Controller inside the Docker container to execute workflows inside it."),(0,a.kt)("p",null,"You can find our images on ",(0,a.kt)("a",{parentName:"p",href:"https://hub.docker.com/r/askuigmbh/askui-ui-controller"},"DockerHub"),"."),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"If you are on an ARM architecture such as Apple Silicon, you can ",(0,a.kt)("em",{parentName:"p"},"NOT")," run the images at the moment!")),(0,a.kt)("h3",{id:"configuration"},"Configuration"),(0,a.kt)("p",null,"The following environment variables can be used for configuring the Docker Container started from one of our Docker Images:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Variable"),(0,a.kt)("th",{parentName:"tr",align:null},"Default Value"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"SE_SCREEN_WIDTH"),(0,a.kt)("td",{parentName:"tr",align:null},"1360"),(0,a.kt)("td",{parentName:"tr",align:null},"Sets the screen width")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"SE_SCREEN_HEIGHT"),(0,a.kt)("td",{parentName:"tr",align:null},"1020"),(0,a.kt)("td",{parentName:"tr",align:null},"Sets the screen height")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"SE_SCREEN_DEPTH"),(0,a.kt)("td",{parentName:"tr",align:null},"24"),(0,a.kt)("td",{parentName:"tr",align:null})),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"GOOGLE_CHROME_ARGS"),(0,a.kt)("td",{parentName:"tr",align:null},"empty"),(0,a.kt)("td",{parentName:"tr",align:null})),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"ASKUI_CONTROLLER_ARGS"),(0,a.kt)("td",{parentName:"tr",align:null},"empty"),(0,a.kt)("td",{parentName:"tr",align:null})),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"VERBOSE"),(0,a.kt)("td",{parentName:"tr",align:null},"empty"),(0,a.kt)("td",{parentName:"tr",align:null})))),(0,a.kt)("h3",{id:"usage"},"Usage"),(0,a.kt)("h3",{id:"starting-container-manually"},"Starting Container ",(0,a.kt)("em",{parentName:"h3"},"Manually")),(0,a.kt)("p",null,"You can pull an image using ",(0,a.kt)("inlineCode",{parentName:"p"},"docker pull"),", e.g.,"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"docker pull askuigmbh/askui-ui-controller:0.11.2-chrome-119.0-amd64\n")),(0,a.kt)("p",null,"and, then, start the corresponding container using:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"docker run -p 6769:6769 -p 7900:7900 askuigmbh/askui-ui-controller:0.11.2-chrome-119.0-amd64\n")),(0,a.kt)("p",null,"Ports:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"AskUI UI Controller: ",(0,a.kt)("inlineCode",{parentName:"li"},"6769")),(0,a.kt)("li",{parentName:"ul"},"No_VNC: ",(0,a.kt)("inlineCode",{parentName:"li"},"7900"))),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Password for No_VNC is ",(0,a.kt)("inlineCode",{parentName:"p"},"secret"),".")),(0,a.kt)("h3",{id:"starting-container-from-within-beforeall-using-testcontainers"},"Starting Container from Within ",(0,a.kt)("inlineCode",{parentName:"h3"},"beforeAll()")," Using Testcontainers"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/testcontainers/testcontainers-node"},"Testcontainers")," is a Node.js library that supports starting Docker Containers from within tests and throwing them away afterwards."),(0,a.kt)("p",null,"To use it, first install it:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"npm i -D testcontainers\n")),(0,a.kt)("p",null,"After that, you can adjust the ",(0,a.kt)("inlineCode",{parentName:"p"},"askui-helper.ts")," that is created when running ",(0,a.kt)("inlineCode",{parentName:"p"},"npx askui init")," like in the following example starting the AskUI container just before all instructions are run and connecting to it:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import { UiControlClient } from 'askui';\nimport { GenericContainer, StartedTestContainer } from 'testcontainers';\n\njest.setTimeout(60 * 1000 * 60);\n\nfunction getDockerImageName(): string {\n  const askuiUiControllerVersion = 'v0.11.2';\n  const browser = 'chrome';\n  const browserVersion = '119.0';\n  const osArch = 'amd64';\n  return `askuigmbh/askui-ui-controller:${askuiUiControllerVersion}-${browser}-${browserVersion}-${osArch}`;\n}\n\nasync function startTestContainer(): Promise<StartedTestContainer> {\n  const container = await new GenericContainer(getDockerImageName())\n    .withEnv('SE_SCREEN_WIDTH', '1920')\n    .withEnv('SE_SCREEN_HEIGHT', '1080')\n    .withExposedPorts(6769, 7900)\n    .start();\n\n  console.log(`VNC link: ${container.getHost()}:${container.getMappedPort(7900)}`);\n\n  return container;\n}\n\nlet testContainer: StartedTestContainer;\n\n// eslint-disable-next-line import/no-mutable-exports\nlet aui: UiControlClient;\n\nbeforeAll(async () => {\n  testContainer = await startTestContainer();\n\n  aui = await UiControlClient.build({\n    uiControllerUrl: `http://127.0.0.1:${testContainer.getMappedPort(6769)}`,\n  });\n\n  await aui.connect();\n});\n\nafterAll(async () => {\n  aui.disconnect();\n\n  await testContainer.stop();\n});\n\nexport { aui };\n\n")),(0,a.kt)("h2",{id:"tag-naming-schema"},"Tag Naming Schema"),(0,a.kt)("p",null,"We use the following tag schema:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"<controller-version>-<browser-name>-<browser-version>-amd64\n\n# browser-name: chrome only for now\n\n# Example\n0.11.2-chrome-119.0.6045.123-amd64\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u2757\ufe0f ",(0,a.kt)("inlineCode",{parentName:"p"},"<controller-version>")," is ",(0,a.kt)("em",{parentName:"p"},"NOT")," the ",(0,a.kt)("inlineCode",{parentName:"p"},"AskUI SDK")," version \u2757\ufe0f")),(0,a.kt)("h2",{id:"connect-via-vnc"},"Connect via VNC"),(0,a.kt)("p",null,"To check what is happening inside a running container, you can connect via VNC. For this, you need to open a browser and navigate to ",(0,a.kt)("inlineCode",{parentName:"p"},"http://localhost:7900"),". When ",(0,a.kt)("a",{parentName:"p",href:"#starting-container-from-within-beforeall-using-testcontainers"},"using the testcontainers example code"),", the VNC port to connect to is logged to the console."),(0,a.kt)("p",null,"When connecting, enter the password ",(0,a.kt)("inlineCode",{parentName:"p"},"secret")," when asked."),(0,a.kt)("p",null,"Example of a VNC connection with a Chrome browser running inside a container:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"VNC Example",src:n(16220).Z,width:"2562",height:"1415"})))}u.isMDXComponent=!0},16220:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/vnc-example-9077144d46d3f03f74248609d25a18a5.png"}}]);